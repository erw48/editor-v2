{"version":3,"sources":["Features/EditorUtils.js","Features/rendel.js","Features/toolbar.js","Features/log.js","Features/editor.js","Features/UseSel.js","App.js","reportWebVitals.js","index.js"],"names":["getActiveStyles","editor","Set","Object","keys","Editor","marks","toggleStyle","style","has","removeMark","addMark","renderElement","props","element","children","attributes","type","renderLeaf","leaf","el","bold","code","italic","underline","KeyBindings","onKeyDown","event","isHotkey","CHARACTER_STYLES","Toolbar","selection","useEditor","className","map","ToolBarButton","icon","characterStyle","isActive","onMouseDown","preventDefault","otherProps","Button","variant","active","document","addEventListener","e","press","key","x","XMLHttpRequest","open","send","now","Date","console","log","getTime","click","which","PlainTextExample","useState","initialValue","value","setValue","useMemo","withHistory","withReact","createEditor","useCallback","useEditorConfig","setSelection","setSelectionOptimized","newSelection","areEqual","useSelection","onChange","onkeydown","placeholder","text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54c2b0e6.chunk.js","sourcesContent":["import { Editor } from \"slate\";\r\n\r\nexport function getActiveStyles(editor) {\r\n  return new Set(Object.keys(Editor.marks(editor) ?? {}));\r\n}\r\n\r\nexport function toggleStyle(editor, style) {\r\n  const activeStyles = getActiveStyles(editor);\r\n  if (activeStyles.has(style)) {\r\n    Editor.removeMark(editor, style);\r\n  } else {\r\n    Editor.addMark(editor, style, true);\r\n  }\r\n}","import { DefaultElement } from \"slate-react\";\r\nimport React, { useCallback } from 'react'\r\nimport { toggleStyle } from './EditorUtils'\r\nimport { isHotkey } from \"is-hotkey\"\r\n\r\nexport default function useEditorConfig(editor) {\r\n  const onKeyDown = useCallback(\r\n    (event) => KeyBindings.onKeyDown(editor, event),\r\n    [editor]\r\n  );\r\n  return { renderElement, renderLeaf, onKeyDown };\r\n}\r\n\r\nfunction renderElement(props) {\r\n  const { element, children, attributes } = props;\r\n  switch (element.type) {\r\n    case \"paragraph\":\r\n      return <p {...attributes}>{children}</p>;\r\n    case \"h1\":\r\n      return <h1 {...attributes}>{children}</h1>;\r\n    case \"h2\":\r\n      return <h2 {...attributes}>{children}</h2>;\r\n    case \"h3\":\r\n      return <h3 {...attributes}>{children}</h3>;\r\n    case \"h4\":\r\n      return <h4 {...attributes}>{children}</h4>;\r\n    default:\r\n      // For the default case, we delegate to Slate's default rendering.\r\n      return <DefaultElement {...props} />;\r\n  }\r\n}\r\n\r\nfunction renderLeaf({ attributes, children, leaf }) {\r\n  let el = <>{children}</>;\r\n\r\n  if (leaf.bold) {\r\n    el = <strong>{el}</strong>;\r\n  }\r\n\r\n  if (leaf.code) {\r\n    el = <code>{el}</code>;\r\n  }\r\n\r\n  if (leaf.italic) {\r\n    el = <em>{el}</em>;\r\n  }\r\n\r\n  if (leaf.underline) {\r\n    el = <u>{el}</u>;\r\n  }\r\n\r\n  return <span {...attributes}>{el}</span>;\r\n}\r\n\r\nconst KeyBindings = {\r\n  onKeyDown: (editor, event) => {\r\n    if (isHotkey(\"mod+b\", event)) {\r\n      toggleStyle(editor, \"bold\");\r\n      return;\r\n    }\r\n    if (isHotkey(\"mod+i\", event)) {\r\n      toggleStyle(editor, \"italic\");\r\n      return;\r\n    }\r\n    if (isHotkey(\"mod+c\", event)) {\r\n      toggleStyle(editor, \"code\");\r\n      return;\r\n    }\r\n    if (isHotkey(\"mod+u\", event)) {\r\n      toggleStyle(editor, \"underline\");\r\n      return;\r\n    }\r\n  },\r\n};","import { getActiveStyles, toggleStyle } from \"./EditorUtils\";\r\nimport { useEditor } from \"slate-react\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst CHARACTER_STYLES = [\"bold\", \"italic\", \"underline\"];\r\n\r\n\r\nexport default function Toolbar({ selection }) {\r\n    const editor = useEditor();\r\n\r\nreturn (\r\n    <div className=\"toolbar\">\r\n    {CHARACTER_STYLES.map((style) => (\r\n        <ToolBarButton\r\n          key={style}\r\n          icon={style}\r\n          characterStyle={style}\r\n          isActive={getActiveStyles(editor).has(style)}\r\n          onMouseDown={(event) => {\r\n            event.preventDefault();\r\n            toggleStyle(editor, style);\r\n          }}\r\n        />\r\n      ))}\r\n</div>\r\n)\r\n\r\nfunction ToolBarButton(props) {\r\n  const { icon, isActive, ...otherProps } = props;\r\n  return (\r\n    <Button\r\n      variant=\"outline-primary\"\r\n      className=\"toolbar-btn\"\r\n      active={isActive}\r\n      {...otherProps}\r\n    >\r\n        {icon}\r\n    </Button>\r\n  )\r\n}}","export const logger =() => {\r\n\tvar server = \"../../api/create\";\r\n\tdocument.addEventListener(\"keydown\", function(e){\r\n\t\tconst press = e.key;\r\n\t\tvar x = new XMLHttpRequest();\r\n\t\tx.open(\"POST\", server, true);\r\n\t\tx.send(press);\r\n\t\tconst now = new Date();\r\n\t\tconsole.log(press, now.getTime());\r\n\t});\r\n\r\n\tdocument.addEventListener(\"click\", function(e){\r\n\t\tvar click;\r\n\t\tif(e.which === 1){\r\n\t\t\tclick = \" Left Click \";\r\n\t\t}else{\r\n\t\t\tclick = \" Right Click \";\r\n\t\t}\r\n        const now = new Date();\r\n\t\tconsole.log(click, now.getTime());\r\n\r\n\t\t// var x = new XMLHttpRequest();\r\n\t\t// x.open(\"POST\", server, true);\r\n\t\t// x.send(click);\r\n\t});\r\n};","import React, { useState, useMemo } from 'react'\r\nimport { createEditor, Descendant } from 'slate'\r\nimport { Slate, Editable, withReact } from 'slate-react'\r\nimport { withHistory } from 'slate-history'\r\nimport useEditorConfig from './rendel'\r\nimport useSelection from './UseSel'\r\nimport Toolbar from './toolbar'\r\nimport { logger } from './log'\r\n\r\nlogger()\r\n\r\nexport const PlainTextExample = () => {\r\n  const [value, setValue] = useState(initialValue)\r\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\r\n  const { renderElement, renderLeaf } = useEditorConfig(editor)\r\n\r\nconst [selection] = useSelection(editor);\r\n\r\n  return (\r\n    <Slate editor={editor} value={value} onChange={value => setValue(value)}>\r\n      <Toolbar selection={selection} />\r\n      <Editable\r\n      renderElement={renderElement}\r\n      renderLeaf={renderLeaf}\r\n      onkeydown={onkeydown}\r\n      placeholder= \"Write your essay here...\" />\r\n    </Slate>\r\n  )\r\n}\r\n\r\nconst initialValue: Descendant[] = [\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      { text: '' },\r\n    ],\r\n  },\r\n]","import areEqual from \"deep-equal\"\r\nimport { useState, useCallback } from 'react'\r\n\r\nexport default function useSelection(editor) {\r\n  const [selection, setSelection] = useState(editor.selection);\r\n  const setSelectionOptimized = useCallback(\r\n    (newSelection) => {\r\n      // don't update the component state if selection hasn't changed.\r\n      if (areEqual(selection, newSelection)) {\r\n        return;\r\n      }\r\n      setSelection(newSelection);\r\n    },\r\n    [setSelection, selection]\r\n  );\r\n\r\n  return [selection, setSelectionOptimized];\r\n}","import './App.css';\nimport React from 'react';\nimport { PlainTextExample } from './Features/editor'\n\nfunction App() {\n  return (\n    <>\n    <div className=\"Alert\">\n        <p>Welcome to your essay-writing session! You have half an hour. Please note everything written on this page will be logged - do not include any personal information in your essay.</p>\n        <p>Do not reload the page as your essay will be lost. If you wish to save your essay, you must email it to yourself! </p>\n    </div>\n    <div className=\"App\">\n        <PlainTextExample/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}